name: Docker PR Validation

on:
  pull_request:
    branches: [main, develop]

jobs:
  docker-pr-validation:
    name: Docker Build & Quality Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: webfrontend:pr-${{ github.event.number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Test Docker container
        run: |
          docker run -d -p 3000:3000 --name pr-test webfrontend:pr-${{ github.event.number }}
          sleep 15
          
      - name: Validate container functionality
        run: |
          # Test main endpoint
          curl -f http://localhost:3000 || exit 1
          
          # Test that it's actually serving Next.js content
          response=$(curl -s http://localhost:3000)
          if [[ $response == *"__NEXT_DATA__"* ]]; then
            echo "‚úÖ Next.js application is running correctly"
          else
            echo "‚ùå Application doesn't appear to be serving Next.js content"
            exit 1
          fi
          
      - name: Run quality checks in container
        run: |
          # Run linting inside the container
          docker exec pr-test npm run lint
          
          # Run type checking inside the container
          docker exec pr-test npm run type-check
          
      - name: Check container resource usage
        run: |
          echo "Container resource usage:"
          docker stats pr-test --no-stream
          
      - name: Cleanup
        if: always()
        run: |
          docker stop pr-test || true
          docker rm pr-test || true
          
      - name: Comment PR with results
        uses: actions/github-script@v7
        if: success()
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üê≥ **Docker Build Successful!**
              
              ‚úÖ Docker image built successfully
              ‚úÖ Container starts and responds correctly  
              ‚úÖ Linting passed
              ‚úÖ Type checking passed
              ‚úÖ Next.js application serving properly
              
              Ready for review!`
            })
            
      - name: Comment PR with failure
        uses: actions/github-script@v7
        if: failure()
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üê≥ **Docker Build Failed!**
              
              ‚ùå There was an issue with the Docker build or container testing.
              
              Please check the workflow logs and fix the issues before merging.`
            })
